name: Build & deploy prod

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Check if composer.json exists
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: 'composer.json'

    - name: Run composer install if composer.json exists
      if: steps.check_files.outputs.files_exists == 'true'
      run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

    - name: Set up Node.js version
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: npm install
      run: |
        npm install

    - name: Make envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_DBURL: ${{ secrets.PROD_DBURL }}
        envkey_DBPORT: 3306
        envkey_DBNAME: ${{ secrets.PROD_DBNAME }}
        envkey_DBUSER: ${{ secrets.PROD_DBUSER }}
        envkey_DBPASSWORD: ${{ secrets.PROD_DBPASSWORD }}
        envkey_DBPREFIX: "prod_"
        envkey_LOGLEVEL: "ERROR"
        envkey_BLOB_URL: "https://stockagehaovh.blob.core.windows.net"
        envkey_BLOB_CONNECTION_STRING: ${{ secrets.PROD_BLOB_CONNECTION_STRING }}
        envkey_HA_URL: "https://www.helloasso.com"
        envkey_HA_IPS: ${{ vars.PROD_HA_IPS }}
        envkey_HA_AUTH_URL: "https://auth.helloasso.com"
        envkey_API_AUTH_URL: "https://api.helloasso.com/oauth2/token"
        envkey_API_URL: "https://api.helloasso.com/v5"
        envkey_CLIENT_ID: ${{ secrets.PROD_CLIENT_ID }}
        envkey_CLIENT_SECRET: ${{ secrets.PROD_CLIENT_SECRET }}
        envkey_ENCRYPTION_KEY: ${{ secrets.PROD_ENCRYPTION_KEY }}
        envkey_WEBSITE_DOMAIN: ${{ vars.PROD_WEBSITE_DOMAIN }}
        envkey_MANDRILL_API: ${{ secrets.PROD_MANDRILL_API }}
        file_name: .env
  
    - name: Tar
      run : |
        tar czvf artifact.tar.gz migrations public src vendor .env

    - name: Upload
      run : |
        sshpass -p ${{ secrets.PROD_SSH_PASSWORD }} scp -o StrictHostKeyChecking=no artifact.tar.gz ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_SSH_HOST }}:/home/socialgo/www

    - name: Extract
      run : |
        sshpass -p ${{ secrets.PROD_SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_SSH_HOST }} "cd /home/socialgo/www && tar xzvf artifact.tar.gz -C twitch-widget && rm artifact.tar.gz"
          
